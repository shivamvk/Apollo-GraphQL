{
  "_args": [
    [
      "apollo-server-express@2.2.0-alpha.2",
      "/home/shivamvk/Apollo Tutorial/fullstack-tutorial/start/server/node_modules/apollo-server"
    ]
  ],
  "_from": "apollo-server-express@2.2.0-alpha.2",
  "_hasShrinkwrap": false,
  "_id": "apollo-server-express@2.2.0-alpha.2",
  "_inCache": true,
  "_installable": true,
  "_integrity": "",
  "_location": "/apollo-server-express",
  "_nodeVersion": "8.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/apollo-server-express_2.2.0-alpha.2_1541447203735_0.3187488660872082"
  },
  "_npmUser": {
    "email": "npm@apollographql.com",
    "name": "apollo-bot"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "name": "apollo-server-express",
    "raw": "apollo-server-express@2.2.0-alpha.2",
    "rawSpec": "2.2.0-alpha.2",
    "scope": null,
    "spec": "2.2.0-alpha.2",
    "type": "version"
  },
  "_requiredBy": [
    "/apollo-server"
  ],
  "_resolved": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.2.0-alpha.2.tgz",
  "_shasum": "eb159c77cd08e2c6d7b7dec31acabcf53b6c4545",
  "_shrinkwrap": null,
  "_spec": "apollo-server-express@2.2.0-alpha.2",
  "_where": "/home/shivamvk/Apollo Tutorial/fullstack-tutorial/start/server/node_modules/apollo-server",
  "author": {
    "name": "opensource@apollographql.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-server/issues"
  },
  "dependencies": {
    "@apollographql/apollo-upload-server": "^5.0.3",
    "@apollographql/graphql-playground-html": "^1.6.4",
    "@types/accepts": "^1.3.5",
    "@types/body-parser": "1.17.0",
    "@types/cors": "^2.8.4",
    "@types/express": "4.16.0",
    "accepts": "^1.3.5",
    "apollo-server-core": "2.2.0-alpha.2",
    "body-parser": "^1.18.3",
    "cors": "^2.8.4",
    "graphql-subscriptions": "^1.0.0",
    "graphql-tools": "^4.0.0",
    "type-is": "^1.6.16"
  },
  "description": "Production-ready Node.js GraphQL server for Express and Connect",
  "devDependencies": {
    "apollo-server-integration-testsuite": "2.2.0-alpha.2"
  },
  "directories": {},
  "dist": {
    "fileCount": 28,
    "integrity": "sha512-aZ1ZI513kgK/qwYeasvr6Rbi4yYksJ6FtsqNfDDrTJWEdaaOYfYtJ7bgSAUaLSdBp3236Wv2oONCp+pVh1rDyA==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb4J4kCRA9TVsSAnZWagAAeywP/jLGkJN503D6ELhg49RH\nVrrZH+3abO6VPTioTcEbiiQDkSzSHOsstuJDcc7uFRzjV3OT3Of9x09gaf0g\n1VvJlF3XzOyCcRZp/fgDOHVa1mOGNCj9+KuuFI+mCxJTwl5nk4tYLgSBtqVh\nvoxzwRv0ERJ+lNsTevryXOVsAUIgHsXqk6LXkVgP451REbib0Vmj1EAW5s0M\ngAD/XeQRuFeEv4u+WVEo6BqDOuFcMbaHhN28/wM4TWt+6fcU3/8FJ3tGnlgc\nrPQxOmXleqTTPpaI5LRL8fsLx1Azp9ZTcBpjGJCUJnFRhC9Qfnisr1RwsLnq\nCwPWUunPBH0yuJsTvd4cjpVUTuJiZXHA8nLTjN/xnm6b6IaCpFf5PwYh5PVv\nhdIlJtfMcpe3W5D6sMG0f2pfVI9yTKlkBAm0rBz2Lm9iOy1YZ9zLVjmxh7x1\n/Yu2U228io2XP/FL6G7nSZmTVvLd9BjKVSAxwHMHnl/NxUxNF+uY8fibqu2x\nYaiOSuwzEQyYdZn4eqZeKjsWmeop1aqYnrcrrOSXrMqO2MGr8SOyqw9MNs+c\njcX3Tx4aTf/zzVBvT1EoA7HzXrp8J6N7PjUEEFBRy/9qnrdgTr+xLd6brOzo\nQ34SKSZk6AM4a3oKwd8pJwYZPVSl0FiZoXYBefLTp2S1JlDivmtxC6mcnhci\nWqkJ\r\n=8XAy\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "eb159c77cd08e2c6d7b7dec31acabcf53b6c4545",
    "tarball": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.2.0-alpha.2.tgz",
    "unpackedSize": 63315
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "a6872c2f6ca2db03e9f237510b3fc6802d390785",
  "homepage": "https://github.com/apollographql/apollo-server#readme",
  "keywords": [
    "Apollo",
    "Connect",
    "Express",
    "GraphQL",
    "Javascript",
    "Server"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "abernix",
      "email": "npmjs@jro.cc"
    },
    {
      "name": "apollo-bot",
      "email": "npm@apollographql.com"
    },
    {
      "name": "evanshauser",
      "email": "evanshauser@gmail.com"
    },
    {
      "name": "jbaxleyiii",
      "email": "james@meteor.com"
    },
    {
      "name": "martijnwalraven",
      "email": "martijn@martijnwalraven.com"
    },
    {
      "name": "sashko",
      "email": "s.stubailo@gmail.com"
    }
  ],
  "name": "apollo-server-express",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.12.0 || ^0.13.0 || ^14.0.0"
  },
  "readme": "---\ntitle: Express / Connect\ndescription: Setting up Apollo Server with Express.js or Connect\n---\n\n[![npm version](https://badge.fury.io/js/apollo-server-express.svg)](https://badge.fury.io/js/apollo-server-express) [![Build Status](https://circleci.com/gh/apollographql/apollo-server.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-server) [![Coverage Status](https://coveralls.io/repos/github/apollographql/apollo-server/badge.svg?branch=master)](https://coveralls.io/github/apollographql/apollo-server?branch=master) [![Get on Slack](https://img.shields.io/badge/slack-join-orange.svg)](https://www.apollographql.com/#slack)\n\nThis is the Express and Connect integration of GraphQL Server. Apollo Server is a community-maintained open-source GraphQL server that works with many Node.js HTTP server frameworks. [Read the docs](https://www.apollographql.com/docs/apollo-server/). [Read the CHANGELOG.](https://github.com/apollographql/apollo-server/blob/master/CHANGELOG.md)\n\n```sh\nnpm install apollo-server-express\n```\n\n## Express\n\n```js\nconst express = require('express');\nconst { ApolloServer, gql } = require('apollo-server-express');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = express();\nserver.applyMiddleware({ app });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n## Connect\n\n```js\nconst connect = require('connect');\nconst { ApolloServer, gql } = require('apollo-server-express');\nconst query = require('qs-middleware');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = connect();\nconst path = '/graphql';\n\nserver.use(query());\nserver.applyMiddleware({ app, path });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n> Note; `qs-middleware` is only required if running outside of Meteor\n\n## Principles\n\nGraphQL Server is built with the following principles in mind:\n\n* **By the community, for the community**: GraphQL Server's development is driven by the needs of developers\n* **Simplicity**: by keeping things simple, GraphQL Server is easier to use, easier to contribute to, and more secure\n* **Performance**: GraphQL Server is well-tested and production-ready - no modifications needed\n\nAnyone is welcome to contribute to GraphQL Server, just read [CONTRIBUTING.md](https://github.com/apollographql/apollo-server/blob/master/CONTRIBUTING.md), take a look at the [roadmap](https://github.com/apollographql/apollo-server/blob/master/ROADMAP.md) and make your first PR!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/apollographql/apollo-server/tree/master/packages/apollo-server-express"
  },
  "types": "dist/index.d.ts",
  "version": "2.2.0-alpha.2"
}
